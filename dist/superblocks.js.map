{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/data/data.json.es6","src/lib/Array2D.es6","src/lib/ArrayBlocks.es6","src/lib/ArrayMain.es6","src/lib/Block.es6","src/lib/Brick.es6","src/lib/Cell.es6","src/lib/CellsArray.es6","src/lib/Game.es6","src/lib/Move/Move.es6","src/lib/Move/MoveBlock.es6","src/lib/Position/BlockPosition.es6","src/lib/Position/BrickPosition.es6","src/lib/Position/Position.es6","src/lib/Rotate.es6","src/lib/Row.es6","src/lib/Table.es6","src/superblocks.es6"],"names":[],"mappings":"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","file":"superblocks.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var data = {\n    blocks: [\n        {\n            name: 'pyramid',\n            color: 'green',\n            pivot: {\n                x: 1,\n                y: 1\n            },\n            anchor: {\n                x: 0.5,\n                y: 0.5\n            },\n            patterns: [\n                {\n                    angle: 0,\n                    positions: [\n                        [-1, 0], [0, 0], [1, 0], [0, -1]\n                    ]\n                },\n                {\n                    angle: 90,\n                    positions: [\n                        [0, 0], [0, -1], [0, 1], [1, 0]\n                    ]\n                },\n                {\n                    angle: 180,\n                    positions: [\n                        [-1, 0], [0, 0], [1, 0], [0, 1]\n                    ]\n                },\n                {\n                    angle: 270,\n                    positions: [\n                        [0, 0], [0, -1], [0, 1], [-1, 0]\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'column',\n            color: 'yellow',\n            pivot: {\n                x: 2,\n                y: 0\n            },\n            anchor: {\n                x: 0,\n                y: 1\n            },\n            patterns: [\n                {\n                    angle: 0,\n                    positions: [\n                        [-2, 0], [-1, 0], [0, 0], [1, 0]\n                    ]\n                },\n                {\n                    angle: 90,\n                    positions: [\n                        [0, -1], [0, 0], [0, 1], [0, 2]\n                    ]\n                },\n                {\n                    angle: 180,\n                    positions: [\n                        [1, 1], [0, 1], [-1, 1], [-2, 1]\n                    ]\n                },\n                {\n                    angle: 270,\n                    positions: [\n                        [-1, 2], [-1, 1], [-1, 0], [-1, -1]\n                    ]\n                }\n                // {\n                //     angle: 360,\n                //     positions: [\n                //         [-2, 0], [-1, 0], [0, 0], [1, 0]\n                //     ]\n                // }\n            ]\n        },\n        // {\n        //     name: 'cube',\n        //     color: 'blue',\n        //     pivot: {\n        //         x: 1,\n        //         y: 1\n        //     },\n        //     anchor: {\n        //         x: 1,\n        //         y: 0\n        //     },\n        //     patterns: [\n        //         {\n        //             angle: 0,\n        //             positions: [\n        //                 [0, 0], [0, -1], [1, -1], [1, 0]\n        //             ]\n        //         },\n        //         {\n        //             angle: 90,\n        //             positions: [\n        //                 [0, -1], [1, -1], [1, 0], [0, 0]\n        //             ]\n        //         },\n        //         {\n        //             angle: 180,\n        //             positions: [\n        //                 [1, -1], [0, -1], [0, 0], [0, 1]\n        //             ]\n        //         },\n        //         {\n        //             angle: 270,\n        //             positions: [\n        //                 [1, 0], [0, 0], [0, -1], [1, -1]\n        //             ]\n        //         }\n        //     ]\n        // }           \n        {\n            name: 'cube',\n            color: 'blue',\n            pivot: {\n                x: 1,\n                y: 1\n            },\n            anchor: {\n                x: 0,\n                y: 0\n            },\n            patterns: [\n                {\n                    angle: 0,\n                    positions: [\n                        [-1, 0], [-1, -1], [0, -1], [0, 0]\n                    ]\n                },\n                {\n                    angle: 90,\n                    positions: [\n                        [-1, -1], [0, -1], [0, 0], [-1, 0]\n                    ]\n                },\n                {\n                    angle: 180,\n                    positions: [\n                        [0, -1], [0, 0], [-1, 0], [-1, -1]\n                    ]\n                },\n                {\n                    angle: 270,\n                    positions: [\n                        [0, 0], [-1, 0], [-1, -1], [0, -1]\n                    ]\n                }\n            ]\n        }        \n    ]\n};\n\nexport default data;\n","export default class Array2D {\n    constructor(xSize, ySize) {\n        this.xSize = xSize;\n        this.ySize = ySize;\n        this._array = this.buildArray();\n    }\n\n    get array() { return this._array; }\n\n    getAt(x, y)      { return this._array[x][y]; }\n    setAt(x, y, val) { this._array[x][y] = val; }\n\n    buildArray() {\n        var array = new Array(this.ySize);\n\n        for (var y = 0; y < this.ySize; y++) {\n            array[y] = new Array(this.xSize);\n        }\n\n        this._array = array;\n\n        return this.array;\n    }\n\n    prettyPrint() {\n        var array = this.array.map(row => {\n            return row.map(cell => {\n                if (!cell.isEmpty()) {\n                    return (cell.brick.block.nBlock);\n                }\n            });\n        });\n\n        return console.table(array);\n    }\n}\n","import ArrayMain from './ArrayMain.es6';\n\nexport default class ArrayBlocks extends ArrayMain {\n    constructor() {\n        super();\n    }\n\n    findByColor() {\n\n    }\n\n    findByTexture() {\n\n    }\n}\n","export default class ArrayMain extends Array {\n    constructor() {\n        super();\n    }\n\n    get first()                { return this[0]; }\n    get last()                 { return this.slice(-1)[0]; }\n    get isEmpty()              { return this.length === 0; }\n\n    add(block) {\n        this.push(block);\n\n        return this.last;\n    }\n\n    find(idx) {\n        return this.indexOf(idx);\n    }\n\n    randomPick() {\n        return this[Math.floor(Math.random() * this.length)];\n    }\n}\n","import Brick            from './Brick.es6';\nimport ArrayMain        from './ArrayMain.es6';\nimport BlockPosition    from './Position/BlockPosition.es6';\nimport BrickPosition    from './Position/BrickPosition.es6';\nimport MoveBlock        from './Move/MoveBlock.es6';\nimport Rotate           from './Rotate.es6';\n\nexport default class Block {\n    constructor(phaserGame, table, patterns, x, y, pivot, childsAnchor) {\n        this.phaserGame         = phaserGame;\n        this.phaserGroup        = this.phaserGame.add.group();\n\n        this.position           = new BlockPosition(x, y, pivot, childsAnchor);\n        this.bricks             = new ArrayMain();\n\n        this.patterns           = patterns;\n        this.table              = table;\n        this.nBlock             = table.incrementNBlocks();\n\n        this.loadPhaserGroupPosition();\n        this.loadPhaserGroupPivot();\n    }\n\n    get moveBlock()         { return new MoveBlock(this.position, this); }\n    get rotate()            { return new Rotate(this); }\n\n    loadPhaserGroupPosition() {\n        var position = this.position.phaserGroupPosition();\n\n        this.phaserGroup.x = position.x;\n        this.phaserGroup.y = position.y;\n    }\n\n    loadPhaserGroupPivot() {\n        var pivot = this.position.phaserGroupPivot();\n\n        this.phaserGroup.pivot.x = pivot.x;\n        this.phaserGroup.pivot.y = pivot.y;\n    }\n\n    addBrick(brick) {\n        brick.putCell(brick.position, this.table);\n\n        return this.bricks.add(brick);\n    }\n\n    newBrick(position) {\n        var spritePosition = position.phaserSpritePosition();\n\n        var sprite = this.phaserGroup.create(\n            spritePosition.x,\n            spritePosition.y,\n            'green'\n        );\n\n        return this.addBrick(new Brick(position, this, sprite));\n    }\n\n    build() {\n        return new Promise((resolve, reject) => {\n            var pattern = this.rotate.findPatternByAngle(0);\n\n            for (var i = 0; i < pattern.positions.length; ++i) {\n                this.newBrick(new BrickPosition(\n                    this.position,\n                    pattern.positions[i][0],\n                    pattern.positions[i][1],\n                    this.position.childsAnchor\n                ));\n            }\n\n            resolve(this);\n        });\n    }\n\n    buildAny(shapes) {\n        this.build(shapes.randomPick());\n    }\n\n    clearCells() {\n        this.bricks.forEach((brick) => {\n            return brick.clearCell();\n        });\n    }\n\n    removeBricks(destroy = false) {\n        this.phaserGroup.removeAll(destroy);\n        this.clearCells();\n    }\n\n    destroy() {\n        this.phaserGroup.removeAll(true);\n    }\n\n    down()              { return this.moveBlock.down(); }\n\n    up()                { return this.moveBlock.up(); }\n\n    right()             { return this.moveBlock.right(); }\n\n    left()              { return this.moveBlock.left(); }\n\n    to(position)        { return this.moveBlock.to(position); }\n\n    rotateRight()       { return new Rotate(this).right(); }\n\n    rotateLeft()        { return new Rotate(this).left(); }\n\n}\n","// import MoveBrick             from './Move/MoveBrick.es6';\n\n/**\n * @internal Brick is always be attached to a Block\n */\nexport default class Brick {\n    constructor(position, block, phaserSprite) {\n        this.position               = position;\n        this.block                  = block;\n        this.phaserSprite           = phaserSprite;\n\n        this.loadPhaserSpriteAnchor();\n    }\n\n    // Deprecated\n    // get moveBrick()         { return new MoveBrick(this.position, this); }\n\n    loadPhaserSpriteAnchor() {\n        this.phaserSprite.anchor.setTo(\n            this.position.anchor.x,\n            this.position.anchor.y\n        );\n    }\n\n    /**\n     * @param  {Boolean}\n     * @return {[type]}\n     * @todo Apply changes in Table\n     */\n    remove(destroy = false) {\n        var index = this.block.bricks.find(this);\n\n        this.block.bricks.splice(index, 1);\n        this.block.phaserGroup.remove(this.phaserSprite, destroy);\n\n        return this.clearCell();\n    }\n\n    /**\n     * @return {[type]}\n     */\n    destroy() {\n        return this.remove(true);\n    }\n\n    clearCell() {\n        return this.block.table.cell(this.position).clear();\n    }\n\n    putCell(position) {\n        // Allow to pass no position arg (Block.addBrick)\n        this.position = position;\n\n        return this.block.table.cellsArray.cell(this.position)\n        .setTo(this);\n    }\n\n}\n","export default class Cell {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n        this.brick = null;\n    }\n\n    clear() {\n        this.brick = null;\n    }\n\n    setTo(brick) {\n        this.brick = brick;\n\n        return this;\n    }\n\n    isEmpty() {\n        return this.brick === null;\n    }\n}\n","import Array2D from './Array2D.es6';\nimport Cell    from './Cell.es6';\n\nexport default class CellsArray extends Array2D {\n    constructor(xSize, ySize) {\n        super(xSize, ySize);\n\n        this.createCells();\n    }\n\n    /* Notice that x and y are switched */\n    cell(position) { return this.array[position.y][position.x]; }\n\n    createCells() {\n        for (var x = 0; x < this.ySize; ++x) {\n            for (var y = 0; y < this.xSize; ++y) {\n              this.setAt(x, y, new Cell(x, y));\n            }\n        }\n\n        return this.array;\n    }\n\n}\n","/*global Phaser*/\n\nimport Table        from './Table.es6';\nimport Position     from './Position/Position.es6';\n\nexport default class Game {\n    constructor(xSize, ySize, cellSize, dataPath, startCallback, updateCallback) {\n        this.xSize = xSize;\n        this.ySize = ySize;\n        this.cellSize = cellSize;\n        this.phaser = this.phaserGame(startCallback, updateCallback);\n        this.table = new Table(xSize, ySize);\n        this.cursos = null;\n        // this.data = this.parseJSONFile(dataPath);\n        this.data = dataPath;\n    }\n\n    get cellsArray()   { return this._cellsArray; }\n\n    phaserGame(startCallback, updateCallback) {\n        var position = new Position(),\n            width    = position.toPixels(this.xSize, this.cellSize),\n            height   = position.toPixels(this.ySize, this.cellSize);\n\n        return new Phaser.Game(\n            width,\n            height,\n            Phaser.AUTO,\n            'tetris', {\n                preload: this.phaserPreload,\n                create: this.phaserCreate.bind(this, startCallback),\n                update: this.phaserUpdate.bind(this, updateCallback),\n                render: this.phaserRender\n            });\n    }\n\n    phaserPreload() {\n        this.load.image('orange', '../images/block_orange.png');\n        this.load.image('green', './images/block_green.png');\n        this.load.image('yellow', '../../images/block_yellow.png');\n        this.load.image('pink', '../../images/block_pink.png');\n    }\n\n    phaserCreate(startCallback) {\n        this.phaser.add.graphics(0, 0);\n        this.cursors = this.phaser.input.keyboard.createCursorKeys();\n\n        startCallback();\n    }\n\n    phaserUpdate(updateCallback) {\n\n        // updateCallback();\n    }\n\n    phaserRender() {\n\n    }\n\n    // parseJSONFile(json) {\n    // }\n\n}\n","export default class Move {\n    constructor() {\n    }\n\n    up() {\n      return {\n        x: this.position.x,\n        y: this.position.y - 1\n      };\n    }\n\n    down() {\n      return {\n        x: this.position.x,\n        y: this.position.y + 1\n      };\n    }\n\n    right() {\n      return {\n        x: this.position.x + 1,\n        y: this.position.y\n      };\n    }\n\n    left() {\n      return {\n        x: this.position.x - 1,\n        y: this.position.y\n      };\n    }\n}\n","/*global Phaser*/\n\nimport Move             from './Move.es6';\n\nexport default class MoveBlock extends Move {\n    constructor(position, block) {\n        super();\n\n        this.position = position;\n        this.block    = block;\n    }\n\n    phaserTranslate() {\n        var tween = this.block.phaserGame.add.tween(this.block.phaserGroup);\n\n        tween.to(\n          this.block.position.phaserGroupPosition(),\n          1,\n          Phaser.Easing.Linear.None,\n          true\n        );\n\n        return tween;\n    }\n\n    tableTranslate() {\n        this.block.bricks.forEach((brick) => {\n            return brick.putCell(brick.position);\n        });\n    }\n\n    execute(position) {\n        return new Promise((resolve) => {\n            this.block.clearCells();\n\n            this.block.position.x = position.x;\n            this.block.position.y = position.y;\n\n            this.tableTranslate();\n            this.phaserTranslate();\n\n            resolve(this.position);\n        });\n    }\n\n    down() {\n        var position = super.down();\n\n        return this.execute(position);\n    }\n\n    up() {\n        var position = super.up();\n\n        return this.execute(position);\n    }\n\n    right() {\n        var position = super.right();\n\n        return this.execute(position);\n    }\n\n    left() {\n        var position = super.left();\n\n        return this.execute(position);\n    }\n\n    to(position) {\n        return this.execute(position);\n    }\n}\n","import Position            from './Position.es6';\n\nexport default class BlockPosition extends Position {\n    constructor(x, y, pivot, childsAnchor) {\n        super();\n\n        this.x                          = x;\n        this.y                          = y;\n\n        this.pivot                      = pivot;\n        this.childsAnchor               = childsAnchor;\n    }\n\n    phaserGroupPosition() {\n        return {\n            x: this.toPixels(this.x + this.childsAnchor.x),\n            y: this.toPixels(this.y + this.childsAnchor.y)\n        };\n    }\n\n    phaserGroupPivot() {\n        return {\n            x: this.toPixels(this.pivot.x + this.childsAnchor.x),\n            y: this.toPixels(this.pivot.y + this.childsAnchor.y)\n        };\n    }\n}\n","import Position            from './Position.es6';\n\nexport default class BrickPosition extends Position {\n    constructor(blockPosition, relativeX, relativeY, anchor) {\n        super();\n\n        this.blockPosition              = blockPosition;\n\n        this.relativeX                  = relativeX;\n        this.relativeY                  = relativeY;\n\n        this.anchor                     = anchor;\n    }\n\n    get x() {\n        return this.blockPosition.x + this.relativeX;\n    }\n\n    get y() {\n        return this.blockPosition.y + this.relativeY;\n    }\n\n    phaserSpritePosition() {\n        var pivot = this.blockPosition.pivot;\n\n        return {\n            x: this.toPixels(pivot.x + this.relativeX + this.anchor.x),\n            y: this.toPixels(pivot.y + this.relativeY + this.anchor.y)\n        };\n    }\n}\n","export default class Position {\n    constructor(cellSize = 35) {\n        // this.x              = x;\n        // this.y              = y;\n\n        this.cellSize       = cellSize;\n\n        // this.pivot          = pivot;\n        // this.anchor         = anchor;\n    }\n\n    toPixels(val) {\n        return val * this.cellSize;\n    }\n\n    // phaserGroupPosition() {\n    //     return {\n    //         x: Position.toPixels(this.x + this.anchor.x, this.cellSize),\n    //         y: Position.toPixels(this.y + this.anchor.y, this.cellSize)\n    //     };\n    // }\n\n    // get phaserPivot() {\n    //     return {\n    //         x: Position.toPixels(this.pivot.x + this.anchor.x, this.cellSize),\n    //         y: Position.toPixels(this.pivot.y + this.anchor.y, this.cellSize)\n    //     };\n    // }\n\n    // relativeTo(position) {\n    //     return {\n    //         x: (position.x + this.x),\n    //         y: (position.y + this.y)\n    //     };\n    // }\n\n    // relativeToPivot(pivot) {\n    //     return {\n    //         x: (pivot.x + this.x + this.anchor.x) * this.cellSize,\n    //         y: (pivot.y + this.y + this.anchor.y) * this.cellSize\n    //     };\n    // }\n\n    // static toPixels(val, cellSize) {\n    //     return val * cellSize;\n    // }\n\n}\n","/*global Phaser*/\n\nimport BrickPosition         from './Position/BrickPosition.es6';\n\nexport default class Rotate {\n    constructor(block) {\n        this.block       = block;\n\n        this.phaserGame  = block.phaserGame;\n        this.phaserGroup = block.phaserGroup;\n    }\n\n    findPatternByAngle(angle) {\n        var array = this.block.patterns.filter((i) => {\n            return i.angle === angle; }\n        );\n\n        return array[0];\n    }\n\n    phaserTranslate(angle) {\n        return new Promise((resolve) => {\n            this.phaserGame.add.tween(this.phaserGroup).to(\n                { angle: angle },\n                500,\n                Phaser.Easing.Linear.None,\n                true\n            );\n\n            resolve(this.block);\n        });\n    }\n\n    tableTranslate(angle) {\n        var pattern;\n\n        if (angle === 360) { angle = 0; }\n\n        pattern = this.findPatternByAngle(angle);\n\n        this.block.clearCells();\n\n        for (var i = 0; i < this.block.bricks.length; ++i) {\n            var position = new BrickPosition(\n                this.block.position,\n                pattern.positions[i][0],\n                pattern.positions[i][1],\n                this.block.bricks[i].anchor\n            );\n\n            this.block.bricks[i].putCell(position);\n        }\n    }\n\n    execute(angle) {\n        this.phaserTranslate(angle).then((block) => {\n            this.tableTranslate(angle, block);\n        });\n    }\n\n    left() {\n        var angle = this.phaserGroup.angle === 0\n            ? 270 : this.phaserGroup.angle - 90;\n\n        this.execute(angle);\n    }\n\n    right() {\n        var angle = this.phaserGroup.angle === 360\n            ? 90 : this.phaserGroup.angle + 90;\n\n        console.log(angle);\n\n        this.execute(angle);\n    }\n\n}\n","export default class Row {\n    constructor(tableRow) {\n        this.cells          = tableRow;\n    }\n\n    get cells()              { return this._cells; }\n    set cells(cells)         { this._cells = cells; }\n\n    clear() {\n        for (var i = 0; i < this.cells.length; ++i ) {\n            this.cells[i].clear();\n        }\n    }\n\n    /**\n     * @todo  level Up if x rows deleted from las time\n     * @return {[type]}\n     */\n    destroy() {\n        for (var i = 0; i < this.cells.length; ++i) {\n            var cell = this.cells[i];\n\n            if (!cell.isEmpty()) {\n                cell.brick.destroy();\n            }\n        }\n    }\n\n    down() {\n        for (var i = 0; i < this.cells.length; ++i) {\n            var cell = this.cells[i];\n\n            if (!cell.isEmpty()) {\n                cell.brick.block.down();\n            }\n        }\n    }\n}\n","import ArrayBlocks      from './ArrayBlocks.es6';\nimport CellsArray       from './CellsArray.es6';\nimport Row              from './Row.es6';\n\nexport default class Table {\n    constructor(xSize, ySize) {\n        this.xSize          = xSize;\n        this.ySize          = ySize;\n        this._cellsArray    = new CellsArray(xSize, ySize);\n        this.blocks         = new ArrayBlocks();\n    }\n\n    get cellsArray()   { return this._cellsArray; }\n\n    row(x)             { return new Row(this.cellsArray.array[x]); }\n    cell(position)     { return this.cellsArray.cell(position); }\n\n    incrementNBlocks() {\n        return ++this.blocks.length;\n    }\n\n}\n","/*global Phaser*/\n\nimport Game             from './lib/Game.es6';\nimport Block            from './lib/Block.es6';\nimport ArrayMain        from './lib/ArrayMain.es6';\nimport data             from './data/data.json.es6';\n\nvar game;\n\n/**\n * @todo This will be translate to parseJSONFile in Block\n */\nvar createBlocksArray = function() {\n    var array = new ArrayMain();\n\n    for (var i = 0; i < data.blocks.length; ++i) {\n        array.add(data.blocks[i]);\n    }\n\n    return array;\n};\n\nvar moveAround = function(block) {\n    // setTimeout(block.down.bind(block), 500);\n    // setTimeout(block.down.bind(block), 700);\n    // setTimeout(block.right.bind(block), 900);\n\n    // setTimeout(block.rotateRight.bind(block), 1000);\n    // setTimeout(block.rotateRight.bind(block), 2000);\n    // setTimeout(block.rotateRight.bind(block), 3000);\n    // setTimeout(block.rotateRight.bind(block), 4000);\n};\n\nvar start = function() {\n    var blocks = createBlocksArray(),\n        column  = blocks[1],\n        pyramid  = blocks[0];\n\n    new Block(\n        game.phaser, game.table, column.patterns,\n        2, 19, column.pivot, column.anchor\n    ).build();\n\n    new Block(\n        game.phaser, game.table, column.patterns,\n        6, 19, column.pivot, column.anchor\n    ).build();\n\n    var pyramidBlock = new Block(\n        game.phaser, game.table, pyramid.patterns,\n        2, 2, pyramid.pivot, pyramid.anchor\n    );\n\n    pyramidBlock.build();\n\n    setTimeout(pyramidBlock.rotateRight.bind(pyramidBlock), 1000);\n    setTimeout(pyramidBlock.to.bind(pyramidBlock, {x: 8, y: 18}), 2000);\n\n    setTimeout(function() {\n        game.table.row(19).destroy();\n        game.table.row(18).down();\n    }, 5000);\n\n\n\n    // cubeBlock.up();\n    // cubeBlock.up();\n    // cubeBlock.left();\n\n    // new Block(\n    //     game.phaser, game.table, block.patterns,\n    //     2, 19, block.pivot, block.anchor\n    // ).build();\n\n    // new Block(\n    //     game.phaser, game.table, block.patterns,\n    //     2, 2, block.pivot, block.anchor\n    // ).build();\n\n    // new Block(\n    //     game.phaser, game.table, block.patterns,\n    //     2, 2, block.pivot, block.anchor\n    // ).build();\n\n    // new Block(\n    //     game.phaser, game.table, block.patterns,\n    //     2, 2, block.pivot, block.anchor\n    // ).build();\n\n    // new Block(\n    //     game.phaser, game.table, block.patterns,\n    //     2, 2, block.pivot, block.anchor\n    // ).build();                \n\n};\n\nvar update = function() {\n};\n\ngame = new Game(10, 20, 35, 'path', start, update);\nwindow.game = game;"]}